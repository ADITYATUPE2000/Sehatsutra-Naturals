[{"filePath":"D:\\Projects\\productecommerce\\app\\(root)\\(website)\\cart\\page.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\(root)\\(website)\\checkout\\page.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\(root)\\(website)\\my-account\\orders\\page.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\(root)\\(website)\\my-account\\page.jsx","messages":[{"ruleId":"react/jsx-no-undef","severity":2,"message":"'Link' is not defined.","line":67,"column":51,"nodeType":"JSXIdentifier","messageId":"undefined","endLine":67,"endColumn":55}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client'\r\nimport React from 'react'\r\nimport UserPanelLayout from '@/components/website/UserPanelLayout'\r\nimport { HiOutlineShoppingBag } from \"react-icons/hi2\";\r\nimport { FaCartShopping } from \"react-icons/fa6\";\r\nimport Navbar from '@/components/website/Navbar'\r\nimport Footer from '@/components/website/Footer'\r\n \r\n\r\nconst MyAccount = () => {\r\n    const { data: dashboardData } = useFetch('/api/dashboard/user')\r\n    const cartStore = useSelector(store => store.cartStore)\r\n\r\n  return (\r\n    <div>\r\n        <Navbar />\r\n        <UserPanelLayout>\r\n             <div className='shadow rounded bg-white'>\r\n                <div className='p-5 text-xl font-semibold border'>\r\n                Dashboard\r\n                </div>\r\n                <div className='p-5'>\r\n                    <div className='grid lg:grid-cols-2 grid-cols-1 gap-10'>\r\n                        <div className='flex items-center justify-between gap-5 border rounded p-3'>\r\n                            <div>\r\n                                <h4 className='font-semibold text-lg mb-1'>Total Orders</h4>\r\n                                <span className='font-semibold text-gray-500'>0</span>\r\n                            </div>\r\n                            <div className='w-16 h-16 bg-primary rounded-full flex justify-center items-center'>\r\n                                <HiOutlineShoppingBag className= 'text-white' size={25} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='flex items-center justify-between gap-5 border rounded p-3'>\r\n                            <div>\r\n                                <h4 className='font-semibold text-lg mb-1'>Items in Cart</h4>\r\n                                <span className='font-semibold text-gray-500'>{cartStore?.count}</span>\r\n                            </div>\r\n                            <div className='w-16 h-16 bg-primary rounded-full flex justify-center items-center'>\r\n                                <FaCartShopping className= 'text-white' size={25} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='mt-5'>\r\n                        <h4 className='text-lg font-semibold mb-3'>Recent Orders</h4>\r\n                            <div className='overflow-auto'>\r\n                            <table className='w-full'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th className='text-start p-2 text-sm border-b text-nowrap\r\n                                        text-gray-500'>Sr.No.</th>\r\n                                        <th className='text-start p-2 text-sm border-b text-nowrap\r\n                                        text-gray-500'>Order id</th>\r\n                                        <th className='text-start p-2 text-sm border-b text-nowrap\r\n                                        text-gray-500'>Total Item</th>\r\n                                        <th className='text-start p-2 text-sm border-b text-nowrap\r\n                                        text-gray-500'>Amount</th>\r\n                                    </tr> \r\n                                </thead>\r\n                                <tbody>\r\n                                    {dashboardData && dashboardData?.data?.recentOrders?.map((order,\r\n                                    i) => (\r\n                                        <tr key={order._id}>\r\n                                            <td className='text-start text-sm ☐ text-gray-500 p-2\r\n                                            font-bold'>{i + 1}</td>\r\n                                            <td className='text-start text-sm ☐ text-gray-500\r\n                                            p-2'><Link className='underline hover' href={WEBSITE_ORDER_DETAILS (order.order_id)}>\r\n                                            {order.order_id}</Link></td>\r\n                                            <td className='text-start text-sm ☐ text-gray-500 p-2'>\r\n                                                {order.products.length}\r\n                                            </td>\r\n                                            <td className='text-start text-sm ☐ text-gray-500 p-2'>\r\n                                                {order.totalAmount.toLocaleString('en-In', { style:\r\n                                                'currency', currency: 'INR' })}\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n\r\n                            </table>\r\n                            </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div> \r\n        </UserPanelLayout>\r\n        <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MyAccount","usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\(root)\\(website)\\order-success\\[orderId]\\page.jsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'fetchOrder'. Either include it or remove the dependency array.","line":20,"column":6,"nodeType":"ArrayExpression","endLine":20,"endColumn":15,"suggestions":[{"desc":"Update the dependencies array to be: [fetchOrder, orderId]","fix":{"range":[636,645],"text":"[fetchOrder, orderId]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'next/navigation';\r\nimport Link from 'next/link';\r\nimport Navbar from '@/components/website/Navbar';\r\nimport Footer from '@/components/website/Footer';\r\nimport { Button } from '@/components/ui/Button.jsx';\r\nimport { CheckCircle, Package, Truck, Home } from 'lucide-react';\r\nimport Image from 'next/image';\r\n\r\nconst OrderSuccessPage = () => {\r\n  const { orderId } = useParams();\r\n  const [order, setOrder] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (orderId) {\r\n      fetchOrder();\r\n    }\r\n  }, [orderId]);\r\n\r\n  const fetchOrder = async () => {\r\n    try {\r\n      const response = await fetch(`/api/orders/${orderId}`);\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setOrder(data.data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching order:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className=\"min-h-screen bg-background pt-16 flex items-center justify-center\">\r\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-primary\"></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (!order) {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className=\"min-h-screen bg-background pt-16 flex items-center justify-center\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">Order Not Found</h1>\r\n            <Link href=\"/products\">\r\n              <Button>Continue Shopping</Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"min-h-screen bg-background pt-16\">\r\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          <div className=\"text-center mb-8\">\r\n            <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\r\n            <h1 className=\"text-3xl font-bold text-foreground mb-2\">Order Successful!</h1>\r\n            <p className=\"text-muted-foreground\">Thank you for your purchase</p>\r\n            <p className=\"text-sm text-muted-foreground mt-2\">\r\n              Order ID: <span className=\"font-mono\">{order._id}</span>\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"bg-card rounded-lg p-6 mb-6\">\r\n            <h2 className=\"text-xl font-semibold text-foreground mb-4\">Order Details</h2>\r\n            \r\n            <div className=\"grid md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <h3 className=\"font-medium text-foreground mb-2\">Shipping Address</h3>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  {order.shippingAddress.fullName}<br />\r\n                  {order.shippingAddress.address}<br />\r\n                  {order.shippingAddress.city}, {order.shippingAddress.state} - {order.shippingAddress.zipCode}<br />\r\n                  {order.shippingAddress.country}\r\n                </p>\r\n              </div>\r\n              \r\n              <div>\r\n                <h3 className=\"font-medium text-foreground mb-2\">Contact Information</h3>\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Email: {order.shippingAddress.email}<br />\r\n                  Phone: {order.shippingAddress.phone}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-card rounded-lg p-6 mb-6\">\r\n            <h2 className=\"text-xl font-semibold text-foreground mb-4\">Order Items</h2>\r\n            \r\n            <div className=\"space-y-4\">\r\n              {order.items.map((item) => (\r\n                <div key={item._id} className=\"flex items-center space-x-4\">\r\n                  <div className=\"w-20 h-20 rounded-lg overflow-hidden flex-shrink-0\">\r\n                    <Image\r\n                      src={item.product.images[0] || '/placeholder-product.jpg'}\r\n                      alt={item.product.name}\r\n                      width={80}\r\n                      height={80}\r\n                      className=\"w-full h-full object-cover\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <h4 className=\"font-medium text-foreground\">{item.product.name}</h4>\r\n                    <p className=\"text-sm text-muted-foreground\">\r\n                      Quantity: {item.quantity} × ₹{item.price}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    <p className=\"font-medium\">₹{item.price * item.quantity}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            \r\n            <div className=\"border-t mt-4 pt-4\">\r\n              <div className=\"flex justify-between text-lg font-semibold\">\r\n                <span>Total</span>\r\n                <span>₹{order.totalAmount}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-card rounded-lg p-6 mb-6\">\r\n            <h2 className=\"text-xl font-semibold text-foreground mb-4\">Order Status</h2>\r\n            \r\n            <div className=\"flex items-center space-x-4\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-8 h-8 bg-green-500 rounded-full flex items-center justify-center\">\r\n                  <CheckCircle className=\"w-4 h-4 text-white\" />\r\n                </div>\r\n                <span className=\"ml-2 text-sm font-medium\">Order Placed</span>\r\n              </div>\r\n              \r\n              <div className=\"flex-1 h-1 bg-muted rounded-full\">\r\n                <div className=\"h-1 bg-green-500 rounded-full w-1/4\"></div>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-8 h-8 bg-muted rounded-full flex items-center justify-center\">\r\n                  <Package className=\"w-4 h-4 text-muted-foreground\" />\r\n                </div>\r\n                <span className=\"ml-2 text-sm text-muted-foreground\">Processing</span>\r\n              </div>\r\n              \r\n              <div className=\"flex-1 h-1 bg-muted rounded-full\"></div>\r\n              \r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-8 h-8 bg-muted rounded-full flex items-center justify-center\">\r\n                  <Truck className=\"w-4 h-4 text-muted-foreground\" />\r\n                </div>\r\n                <span className=\"ml-2 text-sm text-muted-foreground\">Shipped</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex justify-center space-x-4\">\r\n            <Link href=\"/products\">\r\n              <Button variant=\"outline\">\r\n                <Home className=\"w-4 h-4 mr-2\" />\r\n                Continue Shopping\r\n              </Button>\r\n            </Link>\r\n            <Link href=\"/my-account/orders\">\r\n              <Button>\r\n                <Package className=\"w-4 h-4 mr-2\" />\r\n                View My Orders\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderSuccessPage;\r\n","usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\(root)\\(website)\\orders\\page.jsx","messages":[{"ruleId":"react/jsx-no-undef","severity":2,"message":"'Link' is not defined.","line":35,"column":41,"nodeType":"JSXIdentifier","messageId":"undefined","endLine":35,"endColumn":45}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import UserPanelLayout from '@/components/website/UserPanelLayout'\r\nimport React from 'react'\r\nimport { useFetch } from '@/hooks/useFetch'\r\n\r\n\r\nconst Orders = () => {\r\n  const { data:orderData, loading}= useFetch(\"/api/use-orders\")\r\n  \r\n  return (\r\n    <UserPanelLayout>\r\n      <div className='shadow rounded bg-white'>\r\n                <div className='p-5 text-xl font-semibold'>\r\n                Orders\r\n                </div>\r\n                <div className='p-5'>\r\n                  {loading ?\r\n                    <div className='text-center py-5' >Loading...</div>\r\n                      :\r\n                    <div className='overflow-auto'>\r\n                      <table className='w-full'>\r\n                        <thead>\r\n                          <tr>\r\n                              <th className='text-start p-2 text-sm border-b text-nowrap text-gray-500'>Sr.No.</th>\r\n                              <th className='text-start p-2 text-sm border-b text-nowrap text-gray-500'>Order id</th>\r\n                              <th className='text-start p-2 text-sm border-b text-nowrap text-gray-500'>Total Item</th>\r\n                              <th className='text-start p-2 text-sm border-b text-nowrap text-gray-500'>Amount</th>\r\n                          </tr> \r\n                        </thead>\r\n                        <tbody>\r\n                          {orderData && orderData?.orders?.map((order, i) => (\r\n                              <tr key={order._id}>\r\n                                  <td className='text-start text-sm ☐ text-gray-500 p-2\r\n                                  font-bold'>{i + 1}</td>\r\n                                  <td className='text-start text-sm ☐ text-gray-500\r\n                                  p-2'><Link className='underline hover:text-blue-500' href={WEBSITE_ORDER_DETAILS (order.order_id)}>\r\n                                  {order.order_id}</Link></td>\r\n                                  <td className='text-start text-sm ☐ text-gray-500 p-2'>\r\n                                      {order.products.length}\r\n                                  </td>\r\n                                  <td className='text-start text-sm ☐ text-gray-500 p-2'>\r\n                                      {order.totalAmount.toLocaleString('en-In', { style:\r\n                                      'currency', currency: 'INR' })}\r\n                                  </td>\r\n                              </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n\r\n                  \r\n                  }\r\n                    \r\n                    \r\n\r\n                </div>\r\n      </div>\r\n    </UserPanelLayout>\r\n     \r\n  )\r\n}\r\n\r\nexport default Orders","usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\(root)\\(website)\\products\\[slug]\\page.jsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'fetchProduct'. Either include it or remove the dependency array.","line":28,"column":6,"nodeType":"ArrayExpression","endLine":28,"endColumn":12,"suggestions":[{"desc":"Update the dependencies array to be: [fetchProduct, slug]","fix":{"range":[932,938],"text":"[fetchProduct, slug]"}}]},{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":278,"column":74,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&apos;"},"fix":{"range":[10267,10286],"text":"Why You&apos;ll Love It:"},"desc":"Replace with `&apos;`."},{"messageId":"replaceWithAlt","data":{"alt":"&lsquo;"},"fix":{"range":[10267,10286],"text":"Why You&lsquo;ll Love It:"},"desc":"Replace with `&lsquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#39;"},"fix":{"range":[10267,10286],"text":"Why You&#39;ll Love It:"},"desc":"Replace with `&#39;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rsquo;"},"fix":{"range":[10267,10286],"text":"Why You&rsquo;ll Love It:"},"desc":"Replace with `&rsquo;`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\r\nimport { Button } from \"@/components/ui/Button.jsx\";\r\nimport { Star, Shield, Truck } from \"lucide-react\";\r\nimport Link from \"next/link\";\r\nimport Navbar from \"@/components/website/Navbar\";\r\nimport Image from \"next/image\";\r\nimport Footer from \"@/components/website/Footer\";\r\nimport { HiMinus, HiPlus } from 'react-icons/hi2';\r\nimport { useState, useEffect } from 'react';\r\nimport { useParams } from 'next/navigation';\r\nimport { useSession } from 'next-auth/react';\r\nimport { showToast } from '@/lib/showToast';\r\n\r\nconst ProductPage = () => {\r\n  const [qty, setQty] = useState(1);\r\n  const [product, setProduct] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [addingToCart, setAddingToCart] = useState(false);\r\n  const params = useParams();\r\n  const { data: session } = useSession();\r\n\r\n  const slug = params.slug;\r\n\r\n  useEffect(() => {\r\n    if (slug) {\r\n      fetchProduct();\r\n    }\r\n  }, [slug]);\r\n\r\n  const fetchProduct = async () => {\r\n    try {\r\n      const response = await fetch(`/api/products/${slug}`);\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setProduct(data.data);\r\n      } else {\r\n        showToast('error', 'Failed to load product');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching product:', error);\r\n      showToast('error', 'Error loading product');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleQty = (actionType) => {\r\n    if (actionType === 'inc') {\r\n      setQty(prev => prev + 1);\r\n    } else {\r\n      if (qty !== 1) {\r\n        setQty(prev => prev - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = async () => {\r\n    if (!session) {\r\n      showToast('error', 'Please login to add items to cart');\r\n      return;\r\n    }\r\n\r\n    if (!product) return;\r\n\r\n    setAddingToCart(true);\r\n    \r\n    try {\r\n      const response = await fetch('/api/cart', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          productId: product._id,\r\n          quantity: qty\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        showToast('success', 'Added to cart successfully!');\r\n        setQty(1);\r\n      } else {\r\n        showToast('error', data.error || 'Failed to add to cart');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding to cart:', error);\r\n      showToast('error', 'Error adding to cart');\r\n    } finally {\r\n      setAddingToCart(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className=\"min-h-screen bg-background pt-16 flex items-center justify-center\">\r\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-primary\"></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (!product) {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className=\"min-h-screen bg-background pt-16 flex items-center justify-center\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">Product Not Found</h1>\r\n            <Link href=\"/\" className=\"text-primary hover:underline\">\r\n              Go back to home\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"min-h-screen bg-background pt-16\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          {/* Breadcrumb */}\r\n          <nav className=\"flex items-center space-x-2 text-sm text-muted-foreground mb-8\">\r\n            <Link href=\"/\" className=\"hover:text-foreground transition-colors\">\r\n              Home\r\n            </Link>\r\n            <span>/</span>\r\n            <Link href=\"/products\" className=\"hover:text-foreground transition-colors\">\r\n              Products\r\n            </Link>\r\n            <span>/</span>\r\n            <span className=\"text-foreground\">{product.name}</span>\r\n          </nav>\r\n\r\n          <div className=\"grid lg:grid-cols-2 gap-12 items-start\">\r\n            {/* Product Image */}\r\n            <div className=\"relative\">\r\n              <div className=\"aspect-square rounded-2xl bg-gradient-subtle overflow-hidden\">\r\n                <Image\r\n                  src={product.images[0] || '/placeholder-product.jpg'}\r\n                  alt={product.name}\r\n                  width={600}\r\n                  height={600}\r\n                  className=\"w-full h-full object-cover\"\r\n                />\r\n              </div>\r\n              <div className=\"absolute -inset-4 bg-gradient-secondary/10 rounded-3xl blur-xl -z-10\"></div>\r\n            </div>\r\n\r\n            {/* Product Details */}\r\n            <div className=\"space-y-6\">\r\n              <div>\r\n                <h1 className=\"text-4xl lg:text-5xl font-bold text-foreground mb-4\">\r\n                  {product.name}\r\n                </h1>\r\n                \r\n                <div className=\"flex items-center space-x-4 mb-4\">\r\n                  <div className=\"text-3xl font-bold text-primary\">\r\n                    ₹{product.price}\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-1\">\r\n                    {[...Array(5)].map((_, i) => (\r\n                      <Star key={i} className=\"w-5 h-5 fill-secondary text-secondary\" />\r\n                    ))}\r\n                    <span className=\"text-muted-foreground ml-2\">2,847 reviews</span>\r\n                  </div>\r\n                </div>\r\n\r\n                <p className=\"text-lg text-muted-foreground leading-relaxed\">\r\n                  {product.description}\r\n                </p>\r\n              </div>\r\n\r\n              {/* Stock Status */}\r\n              <div className=\"flex items-center space-x-2 text-accent-green\">\r\n                <Truck className=\"w-5 h-5\" />\r\n                <span className=\"font-medium\">\r\n                  {product.stock > 0 ? `${product.stock} in stock` : 'Out of stock'}\r\n                </span>\r\n              </div>\r\n\r\n              {/* Quantity Selector */}       \r\n              <div className=\"mt-5\">\r\n                <p className=\"font-bold mb-2\">Quantity</p>\r\n                <div className=\"flex items-center h-10 border w-fit rounded-full\">\r\n                  <Button \r\n                    type=\"button\" \r\n                    className=\"px-4 text-muted-foreground hover:text-foreground\" \r\n                    onClick={() => handleQty('dec')}\r\n                    disabled={qty <= 1}\r\n                  >\r\n                    <HiMinus/>\r\n                  </Button>\r\n                  <input \r\n                    type='text' \r\n                    value={qty} \r\n                    className=\"w-14 text-center border-none outline-offset-0\" \r\n                    readOnly \r\n                  />\r\n                  <Button \r\n                    type=\"button\" \r\n                    className=\"px-4 text-muted-foreground hover:text-foreground\"\r\n                    onClick={() => handleQty('inc')}\r\n                    disabled={qty >= product.stock}\r\n                  >\r\n                    <HiPlus/>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Add to Cart */}\r\n              <Button \r\n                size=\"lg\" \r\n                className=\"bg-[#2D5016] hover:bg-[#7BA428] w-full h-14 text-lg text-white font-semibold\" \r\n                onClick={handleAddToCart}\r\n                disabled={addingToCart || product.stock === 0}\r\n              >\r\n                {addingToCart ? 'Adding to Cart...' : 'Add to Cart'}\r\n              </Button>\r\n\r\n              {/* Guarantee */}\r\n              <div className=\"flex items-center justify-center space-x-2 text-muted-foreground\">\r\n                <Shield className=\"w-5 h-5\" />\r\n                <span>30-Day Money Back Guarantee</span>\r\n              </div>\r\n\r\n              {/* Key Benefits */}\r\n              <div className=\"border-t border-border pt-6\">\r\n                <h4 className=\"font-semibold text-foreground mb-3\">Key Benefits</h4>\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <div className=\"w-2 h-2 rounded-full bg-secondary\"></div>\r\n                    <span className=\"text-sm text-muted-foreground\">100% Natural</span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <div className=\"w-2 h-2 rounded-full bg-secondary\"></div>\r\n                    <span className=\"text-sm text-muted-foreground\">No Side Effects</span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <div className=\"w-2 h-2 rounded-full bg-secondary\"></div>\r\n                    <span className=\"text-sm text-muted-foreground\">Clinically Tested</span>\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <div className=\"w-2 h-2 rounded-full bg-secondary\"></div>\r\n                    <span className=\"text-sm text-muted-foreground\">100% pure</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Product Details Section */}\r\n          <div className=\"mt-16\">\r\n            <div className=\"bg-card/50 rounded-3xl p-8 lg:p-12\">\r\n              <h2 className=\"text-3xl lg:text-4xl font-bold text-foreground mb-8\">\r\n                Product Details\r\n              </h2>\r\n              \r\n              <div className=\"grid lg:grid-cols-2 gap-12\">\r\n                <div>\r\n                  <h3 className=\"text-xl font-semibold text-foreground mb-6 flex items-center\">\r\n                    <div className=\"w-8 h-8 rounded-full bg-primary/10 flex items-center justify-center mr-3\">\r\n                      <div className=\"w-4 h-4 rounded-full bg-primary\"></div>\r\n                    </div>\r\n                    About Product\r\n                  </h3>\r\n                  <div className=\"space-y-4\">\r\n                    <p className=\"text-sm text-muted-foreground mt-1\">\r\n                      {product.description}\r\n                    </p>\r\n                    \r\n                    <h4 className=\"font-semibold text-foreground\">Why You'll Love It:</h4>\r\n                    <div className=\"text-semibold text-muted-foreground mt-1\">\r\n                      <p>• 100% Pure & Organic – No additives, preservatives, or fillers</p>\r\n                      <p>• Nutrient-dense superfood for everyday vitality</p>\r\n                      <p>• Supports immunity, energy, and overall wellness</p>\r\n                      <p>• Vegan, gluten-free, and sustainably sourced</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <div className=\"space-y-6\">\r\n                    <div>\r\n                      <h4 className=\"font-medium text-foreground mb-3\">Key Benefits:</h4>\r\n                      <div className=\"text-sm text-muted-foreground space-y-1\">\r\n                        <p>• Supports immunity and metabolism</p>\r\n                        <p>• Increases natural energy levels</p>\r\n                        <p>• Promotes skin, hair, and joint health</p>\r\n                        <p>• Aids digestion and detoxification</p>\r\n                      </div>\r\n\r\n                      <h4 className=\"font-medium text-foreground mb-3 mt-6\">Key Ingredients</h4>\r\n                      <div className=\"text-sm text-muted-foreground space-y-1\">\r\n                        <p>{product.ingredients || '100% Pure Organic Moringa Leaf Powder'}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductPage;\r\n","usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\(root)\\(website)\\products\\page.jsx","messages":[{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":491,"column":19,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&apos;"},"fix":{"range":[19416,19510],"text":"\r\n                We&apos;re currently adding new products. Please check back soon!\r\n              "},"desc":"Replace with `&apos;`."},{"messageId":"replaceWithAlt","data":{"alt":"&lsquo;"},"fix":{"range":[19416,19510],"text":"\r\n                We&lsquo;re currently adding new products. Please check back soon!\r\n              "},"desc":"Replace with `&lsquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#39;"},"fix":{"range":[19416,19510],"text":"\r\n                We&#39;re currently adding new products. Please check back soon!\r\n              "},"desc":"Replace with `&#39;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rsquo;"},"fix":{"range":[19416,19510],"text":"\r\n                We&rsquo;re currently adding new products. Please check back soon!\r\n              "},"desc":"Replace with `&rsquo;`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client';\r\nimport { Button } from \"@/components/ui/Button.jsx\";\r\nimport Link from \"next/link\";\r\nimport Navbar from \"@/components/website/Navbar\";\r\nimport Image from \"next/image\";\r\nimport Footer from \"@/components/website/Footer\";\r\nimport { useState, useEffect } from 'react';\r\nimport { Star, ShoppingCart, Plus, X, ChevronDown, ChevronUp, Heart } from \"lucide-react\";\r\nimport { showToast } from '@/lib/showToast'\r\nimport { useSession } from 'next-auth/react';\r\n\r\nconst ProductsPage = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [addingToCart, setAddingToCart] = useState({});\r\n  const [showAddForm, setShowAddForm] = useState(false);\r\n  const [addingProduct, setAddingProduct] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(0);\r\n  const [expandedSections, setExpandedSections] = useState({\r\n    features: true,\r\n    care: false,\r\n    shipping: false,\r\n    returns: false\r\n  });\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    price: '',\r\n    category: '',\r\n    stock: '',\r\n    images: '',\r\n    isActive: true\r\n  });\r\n  const { data: session } = useSession();\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      const response = await fetch('/api/products');\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        setProducts(data.data);\r\n      } else {\r\n        showToast.error('Failed to load products');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching products:', error);\r\n      showToast.error('Error loading products');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddToCart = async (productId, product) => {\r\n    if (!session) {\r\n      showToast.error('Please login to add items to cart');\r\n      return;\r\n    }\r\n\r\n    setAddingToCart(prev => ({ ...prev, [productId]: true }));\r\n    \r\n    try {\r\n      const response = await fetch('/api/cart', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          productId: productId,\r\n          quantity: 1\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      \r\n      if (data.success) {\r\n        showToast('success', 'Added to cart successfully!');\r\n      } else {\r\n        showToast.error(data.error || 'Failed to add to cart');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding to cart:', error);\r\n      showToast.error('Error adding to cart');\r\n    } finally {\r\n      setAddingToCart(prev => ({ ...prev, [productId]: false }));\r\n    }\r\n  };\r\n\r\n  const handleAddProduct = async (e) => {\r\n    e.preventDefault();\r\n    setAddingProduct(true);\r\n    \r\n    try {\r\n      const response = await fetch('/api/products', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          ...formData,\r\n          price: parseFloat(formData.price),\r\n          stock: parseInt(formData.stock),\r\n          images: formData.images ? formData.images.split(',').map(img => img.trim()) : []\r\n        })\r\n      });\r\n      \r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        showToast('success', 'Product added successfully!');\r\n        setFormData({\r\n          name: '',\r\n          description: '',\r\n          price: '',\r\n          category: '',\r\n          stock: '',\r\n          images: '',\r\n          isActive: true\r\n        });\r\n        setShowAddForm(false);\r\n        fetchProducts();\r\n      } else {\r\n        showToast.error(result.error || 'Failed to add product');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to add product:', error);\r\n      showToast.error('Failed to add product: ' + error.message);\r\n    } finally {\r\n      setAddingProduct(false);\r\n    }\r\n  };\r\n\r\n  const handleFormChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const toggleSection = (section) => {\r\n    setExpandedSections(prev => ({\r\n      ...prev,\r\n      [section]: !prev[section]\r\n    }));\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <>\r\n        <Navbar />\r\n        <div className=\"min-h-screen bg-background pt-16 flex items-center justify-center\">\r\n          <div className=\"animate-spin rounded-full h-32 w-32 border-b-2 border-primary\"></div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"min-h-screen bg-background pt-16\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          \r\n          {/* Add Product Button */}\r\n          {session && (\r\n            <div className=\"flex justify-end mb-6\">\r\n              <Button\r\n                onClick={() => setShowAddForm(true)}\r\n                className=\"bg-[#2D5016] hover:bg-[#7BA428] text-white\"\r\n              >\r\n                <Plus className=\"w-4 h-4 mr-2\" /> Add New Product\r\n              </Button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Add Product Form */}\r\n          {showAddForm && (\r\n            <div className=\"bg-card rounded-2xl p-6 mb-8\">\r\n              <h2 className=\"text-2xl font-bold text-foreground mb-4\">Add New Product</h2>\r\n              <form onSubmit={handleAddProduct} className=\"grid gap-4\">\r\n                <div>\r\n                  <label htmlFor=\"name\" className=\"block text-sm font-medium text-muted-foreground mb-1\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    value={formData.name}\r\n                    onChange={handleFormChange}\r\n                    required\r\n                    className=\"w-full p-2 border border-input rounded-md\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"description\" className=\"block text-sm font-medium text-muted-foreground mb-1\">Description</label>\r\n                  <textarea\r\n                    id=\"description\"\r\n                    name=\"description\"\r\n                    value={formData.description}\r\n                    onChange={handleFormChange}\r\n                    rows=\"3\"\r\n                    className=\"w-full p-2 border border-input rounded-md\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"price\" className=\"block text-sm font-medium text-muted-foreground mb-1\">Price (₹)</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"price\"\r\n                    name=\"price\"\r\n                    value={formData.price}\r\n                    onChange={handleFormChange}\r\n                    required\r\n                    className=\"w-full p-2 border border-input rounded-md\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"category\" className=\"block text-sm font-medium text-muted-foreground mb-1\">Category</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"category\"\r\n                    name=\"category\"\r\n                    value={formData.category}\r\n                    onChange={handleFormChange}\r\n                    required\r\n                    className=\"w-full p-2 border border-input rounded-md\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"stock\" className=\"block text-sm font-medium text-muted-foreground mb-1\">Stock</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"stock\"\r\n                    name=\"stock\"\r\n                    value={formData.stock}\r\n                    onChange={handleFormChange}\r\n                    required\r\n                    className=\"w-full p-2 border border-input rounded-md\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"images\" className=\"block text-sm font-medium text-muted-foreground mb-1\">Images (URLs, comma-separated)</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"images\"\r\n                    name=\"images\"\r\n                    value={formData.images}\r\n                    onChange={handleFormChange}\r\n                    className=\"w-full p-2 border border-input rounded-md\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex justify-end gap-2\">\r\n                  <Button\r\n                    type=\"button\"\r\n                    onClick={() => setShowAddForm(false)}\r\n                    variant=\"outline\"\r\n                    className=\"bg-red-600 hover:bg-red-700 text-white\"\r\n                  >\r\n                    <X className=\"w-4 h-4 mr-2\" /> Cancel\r\n                  </Button>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    disabled={addingProduct}\r\n                    className=\"bg-[#2D5016] hover:bg-[#7BA428] text-white\"\r\n                  >\r\n                    {addingProduct ? (\r\n                      <>\r\n                        <ShoppingCart className=\"w-4 h-4 mr-2 animate-pulse\" />\r\n                        Adding...\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Plus className=\"w-4 h-4 mr-2\" /> Add Product\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          )}\r\n\r\n          {/* Product Detail Layout */}\r\n          {products.length > 0 && (\r\n            <div className=\"max-w-7xl mx-auto\">\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12\">\r\n                {/* Left Column - Product Images */}\r\n                <div className=\"space-y-4\">\r\n                  {/* Main Product Image */}\r\n                  <div className=\"aspect-square relative overflow-hidden rounded-lg\">\r\n                    <Image\r\n                      src={products[0].images[selectedImage] || '/assets/images/Product1.jpeg'}\r\n                      alt={products[0].name}\r\n                      width={600}\r\n                      height={600}\r\n                      className=\"w-full h-full object-cover\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Thumbnail Images */}\r\n                  {products[0].images && products[0].images.length > 1 && (\r\n                    <div className=\"flex gap-2\">\r\n                      {products[0].images.map((image, index) => (\r\n                        <button\r\n                          key={index}\r\n                          onClick={() => setSelectedImage(index)}\r\n                          className={`aspect-square w-20 h-20 rounded-lg overflow-hidden border-2 ${\r\n                            selectedImage === index \r\n                              ? 'border-[#2D5016]' \r\n                              : 'border-gray-200'\r\n                          }`}\r\n                        >\r\n                          <Image\r\n                            src={image}\r\n                            alt={`${products[0].name} view ${index + 1}`}\r\n                            width={80}\r\n                            height={80}\r\n                            className=\"w-full h-full object-cover\"\r\n                          />\r\n                        </button>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Right Column - Product Details */}\r\n                <div className=\"space-y-6\">\r\n                  {/* Product Name and Price */}\r\n                  <div>\r\n                    <h1 className=\"text-3xl font-bold text-foreground mb-2\">\r\n                      {products[0].name}\r\n                    </h1>\r\n                    <p className=\"text-2xl font-bold text-[#2D5016]\">\r\n                      ₹{products[0].price}\r\n                    </p>\r\n                  </div>\r\n\r\n                  {/* Rating */}\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <div className=\"flex items-center\">\r\n                      {[...Array(5)].map((_, i) => (\r\n                        <Star key={i} className=\"w-5 h-5 fill-yellow-400 text-yellow-400\" />\r\n                      ))}\r\n                    </div>\r\n                    <span className=\"text-muted-foreground\">(2,847 reviews)</span>\r\n                  </div>\r\n\r\n                  {/* Description */}\r\n                  <p className=\"text-lg text-muted-foreground leading-relaxed\">\r\n                    {products[0].description}\r\n                  </p>\r\n\r\n                  {/* Stock Status */}\r\n                  <div className=\"text-lg text-muted-foreground\">\r\n                    {products[0].stock > 0 ? `${products[0].stock} in stock` : 'Out of stock'}\r\n                  </div>\r\n\r\n                  {/* Action Buttons */}\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <Button\r\n                      size=\"lg\"\r\n                      className=\"flex-1 bg-[#2D5016] hover:bg-[#7BA428] text-white text-lg py-3\"\r\n                      onClick={() => handleAddToCart(products[0]._id, products[0])}\r\n                      disabled={addingToCart[products[0]._id] || products[0].stock === 0}\r\n                    >\r\n                      {addingToCart[products[0]._id] ? (\r\n                        <>\r\n                          <ShoppingCart className=\"w-5 h-5 mr-2 animate-pulse\" />\r\n                          Adding to bag...\r\n                        </>\r\n                      ) : (\r\n                        <>\r\n                          <ShoppingCart className=\"w-5 h-5 mr-2\" />\r\n                          Add to bag\r\n                        </>\r\n                      )}\r\n                    </Button>\r\n                    \r\n                    <Button\r\n                      size=\"lg\"\r\n                      variant=\"outline\"\r\n                      className=\"p-3\"\r\n                    >\r\n                      <Heart className=\"w-5 h-5\" />\r\n                    </Button>\r\n                  </div>\r\n\r\n                  {/* Collapsible Sections */}\r\n                  <div className=\"space-y-4 pt-6 border-t border-gray-200\">\r\n                    {/* Features Section */}\r\n                    <div className=\"border border-gray-200 rounded-lg\">\r\n                      <button\r\n                        onClick={() => toggleSection('features')}\r\n                        className=\"w-full px-4 py-3 flex items-center justify-between text-left hover:bg-gray-50\"\r\n                      >\r\n                        <span className=\"font-semibold text-foreground\">Features</span>\r\n                        {expandedSections.features ? (\r\n                          <ChevronUp className=\"w-5 h-5\" />\r\n                        ) : (\r\n                          <ChevronDown className=\"w-5 h-5\" />\r\n                        )}\r\n                      </button>\r\n                      {expandedSections.features && (\r\n                        <div className=\"px-4 pb-3\">\r\n                          <ul className=\"space-y-2 text-muted-foreground\">\r\n                            <li>• Premium organic ingredients</li>\r\n                            <li>• Rich in essential nutrients</li>\r\n                            <li>• 100% pure & natural</li>\r\n                            <li>• Made in India</li>\r\n                            <li>• Traditional Ayurvedic wisdom</li>\r\n                            <li>• Modern wellness benefits</li>\r\n                            <li>• Sustainable packaging</li>\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    {/* Care Section */}\r\n                    <div className=\"border border-gray-200 rounded-lg\">\r\n                      <button\r\n                        onClick={() => toggleSection('care')}\r\n                        className=\"w-full px-4 py-3 flex items-center justify-between text-left hover:bg-gray-50\"\r\n                      >\r\n                        <span className=\"font-semibold text-foreground\">Care</span>\r\n                        {expandedSections.care ? (\r\n                          <ChevronUp className=\"w-5 h-5\" />\r\n                        ) : (\r\n                          <ChevronDown className=\"w-5 h-5\" />\r\n                        )}\r\n                      </button>\r\n                      {expandedSections.care && (\r\n                        <div className=\"px-4 pb-3 text-muted-foreground\">\r\n                          <p>Store in a cool, dry place. Keep away from direct sunlight and moisture. Best consumed within 12 months of opening.</p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    {/* Shipping Section */}\r\n                    <div className=\"border border-gray-200 rounded-lg\">\r\n                      <button\r\n                        onClick={() => toggleSection('shipping')}\r\n                        className=\"w-full px-4 py-3 flex items-center justify-between text-left hover:bg-gray-50\"\r\n                      >\r\n                        <span className=\"font-semibold text-foreground\">Shipping</span>\r\n                        {expandedSections.shipping ? (\r\n                          <ChevronUp className=\"w-5 h-5\" />\r\n                        ) : (\r\n                          <ChevronDown className=\"w-5 h-5\" />\r\n                        )}\r\n                      </button>\r\n                      {expandedSections.shipping && (\r\n                        <div className=\"px-4 pb-3 text-muted-foreground\">\r\n                          <p>Free shipping on orders above ₹499. Standard delivery: 3-5 business days. Express delivery available.</p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n\r\n                    {/* Returns Section */}\r\n                    <div className=\"border border-gray-200 rounded-lg\">\r\n                      <button\r\n                        onClick={() => toggleSection('returns')}\r\n                        className=\"w-full px-4 py-3 flex items-center justify-between text-left hover:bg-gray-50\"\r\n                      >\r\n                        <span className=\"font-semibold text-foreground\">Returns</span>\r\n                        {expandedSections.returns ? (\r\n                          <ChevronUp className=\"w-5 h-5\" />\r\n                        ) : (\r\n                          <ChevronDown className=\"w-5 h-5\" />\r\n                        )}\r\n                      </button>\r\n                      {expandedSections.returns && (\r\n                        <div className=\"px-4 pb-3 text-muted-foreground\">\r\n                          <p>30-day return policy for unopened products. Contact our customer service for any quality issues.</p>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Empty State */}\r\n          {products.length === 0 && (\r\n            <div className=\"text-center py-12\">\r\n              <div className=\"text-6xl mb-4\">🌿</div>\r\n              <h3 className=\"text-xl font-semibold text-foreground mb-2\">No Products Found</h3>\r\n              <p className=\"text-muted-foreground mb-4\">\r\n                We're currently adding new products. Please check back soon!\r\n              </p>\r\n              <Link href=\"/\">\r\n                <Button>Back to Home</Button>\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsPage;\r\n","usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\(root)\\(website)\\profile\\page.jsx","messages":[{"ruleId":"react-hooks/exhaustive-deps","severity":1,"message":"React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.","line":47,"column":6,"nodeType":"ArrayExpression","endLine":47,"endColumn":12,"suggestions":[{"desc":"Update the dependencies array to be: [form, user]","fix":{"range":[1437,1443],"text":"[form, user]"}}]}],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client'\r\nimport ButtonLoading from '@/components/Application/ButtonLoading'\r\nimport UserPanelLayout from '@/components/Application/Website/UserPanelLayout'\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Textarea } from '@/components/ui/textarea'\r\nimport useFetch from '@/hooks/useFetch'\r\nimport { zSchema } from '@/lib/zodSchema'\r\nimport { zodResolver } from '@hookform/resolvers/zod'\r\nimport React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { useEffect } from 'react'\r\nimport Dropzone from 'react-dropzone' \r\nimport { Avatar, AvatarImage } from '@/components/ui/avatar'\r\nimport userIcon from '@/public/assets/images/user.png'\r\nimport { FaCamera } from \"react-icons/fa\";\r\n\r\n\r\n const Profile = () => {\r\n\r\n  const {data: user}= useFetch('api/profile/get')\r\n  const [loading, setLoading] = useState(false)\r\n\r\n\r\n  const formSchema = zSchema. pick({\r\n    name : true, phone: true, address: true\r\n  })\r\n      \r\n  const form = useForm({\r\n    resolver: zodResolver (formSchema),\r\n    defaultValues: {\r\n    name: \"\",\r\n    phone: \"\",\r\n    address: \"\"\r\n    }\r\n  })\r\n\r\n  useEffect ( () => {\r\n    if (user && user. success) {\r\n      const userData = user.data\r\n      form.reset({\r\n      name: userData?.name,\r\n      phone: userData?.phone,\r\n      address: userData?.address\r\n      })\r\n    }\r\n  }, [user])\r\n\r\n  const handleFileSelecton = (files) => {\r\n  }\r\n\r\n\r\n      \r\n  const updateProfile = (values) =>{\r\n\r\n  }\r\n\r\n    \r\n   return (\r\n     <div>\r\n        <UserPanelLayout>\r\n        <div className='shadow rounded bg-white'>\r\n          <div className='p-5 text-xl font-semibold'>\r\n          Profile\r\n          </div>\r\n\r\n          <div className='mt-5'>\r\n              <Form {...form}>\r\n                <form className='grid md:grid-cols-2 grid-cols-1 gap-5' onSubmit={form.handleSubmit(updateProfile)}>\r\n                  <div className='md:col-span-2 col-span-1 flex justify-center items-center'>\r\n                  <Dropzone onDrop={acceptedFiles => handleFileSelecton(acceptedFiles)}>\r\n                    {({getRootProps, getInputProps}) => (\r\n                        <div {...getRootProps()}>\r\n                          <input {...getInputProps()} />\r\n                          <Avatar className='w-28 h-28 relative group border border-gray-100'></Avatar>\r\n                          <AvatarImage src={userIcon.src}/>\r\n                          <div className=' absolute z-50 w-full h-full top-1/2\r\n                          left-1/2 -translate-x-1/2 -translate-y-1/2\r\n                          justify-center items-center border-2 border-violet-500\r\n                          rounded-full group-hover:flex hidden cursor-pointer'>\r\n                            <FaCamera color ='#7c3aed'/>\r\n                          </div>\r\n                        </div>\r\n\r\n                    )}\r\n                  </Dropzone>\r\n                  </div>\r\n                  <div className='mb-3'>\r\n                    <FormField\r\n                      control={form.control}\r\n                      name=\"name\"\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormLabel>Name</FormLabel>\r\n                          <FormControl>\r\n                            <Input type = \"text\" placeholder=\"example@gmail.com\" {...field} />\r\n                          </FormControl>\r\n                          <FormMessage />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='md-3'>\r\n                    <FormField\r\n                      control={form.control}\r\n                      name=\"phone\"\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormLabel>Phone</FormLabel>\r\n                          <FormControl>\r\n                            <Input type = \"number\" placeholder=\"Enter your number\" {...field} />\r\n                          </FormControl>\r\n                          <FormMessage />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className='mb-3 md:col-span-2 col-span-1'>\r\n                    <FormField\r\n                      control={form.control}\r\n                      name=\"address\"\r\n                      render={({ field }) => (\r\n                        <FormItem>\r\n                          <FormLabel>Address</FormLabel>\r\n                          <FormControl>\r\n                            <Textarea placeholder=\"Enter your address\" {...field} />\r\n                          </FormControl>\r\n                          <FormMessage />\r\n                        </FormItem>\r\n                      )}\r\n                    />\r\n                  </div>\r\n\r\n\r\n    \r\n                  <div className='mb-3'>\r\n                    <ButtonLoading loading={loading} type=\"submit\" text=\"Save changes\" \r\n                      className='cursor-pointer' />\r\n                  </div>\r\n  \r\n                  \r\n         \r\n                </form>\r\n              </Form>\r\n            </div>\r\n\r\n            \r\n          \r\n      </div>\r\n        </UserPanelLayout>\r\n     </div>\r\n   )\r\n }\r\n \r\n export default Profile","usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\(root)\\auth\\login\\page.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\(root)\\auth\\register\\page.jsx","messages":[{"ruleId":"react/no-unescaped-entities","severity":2,"message":"`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","line":104,"column":17,"nodeType":"JSXText","messageId":"unescapedEntityAlts","suggestions":[{"messageId":"replaceWithAlt","data":{"alt":"&apos;"},"fix":{"range":[3645,3695],"text":"\r\n              We&apos;ve sent a verification link to "},"desc":"Replace with `&apos;`."},{"messageId":"replaceWithAlt","data":{"alt":"&lsquo;"},"fix":{"range":[3645,3695],"text":"\r\n              We&lsquo;ve sent a verification link to "},"desc":"Replace with `&lsquo;`."},{"messageId":"replaceWithAlt","data":{"alt":"&#39;"},"fix":{"range":[3645,3695],"text":"\r\n              We&#39;ve sent a verification link to "},"desc":"Replace with `&#39;`."},{"messageId":"replaceWithAlt","data":{"alt":"&rsquo;"},"fix":{"range":[3645,3695],"text":"\r\n              We&rsquo;ve sent a verification link to "},"desc":"Replace with `&rsquo;`."}]}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"'use client'\r\n\r\nimport { useState } from 'react'\r\nimport { useRouter } from 'next/navigation'\r\nimport Link from 'next/link'\r\nimport { motion } from 'framer-motion'\r\nimport { EyeIcon, EyeSlashIcon } from '@heroicons/react/24/outline'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\nimport { z } from 'zod'\r\nimport { zodResolver } from '@hookform/resolvers/zod'\r\nimport { showToast } from '@/lib/showToast'\r\nimport { zSchema } from '@/lib/zodSchema'\r\nimport Image from 'next/image'\r\nimport Logo from \"@/assets/images/Logo.png\"\r\n\r\nexport default function RegisterPage() {\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false)\r\n  const [isLoading, setLoading] = useState(false)\r\n  const [error, setError] = useState('')\r\n  const [success, setSuccess] = useState(false)\r\n  const [registeredEmail, setRegisteredEmail] = useState('')\r\n  const router = useRouter()\r\n\r\n  const formSchema = zSchema.pick({ \r\n    name: true, \r\n    email: true, \r\n    password: true\r\n  }).extend({\r\n    confirmPassword: z.string().min(1, 'Please confirm your password')\r\n  }).refine((data) => data.password === data.confirmPassword, {\r\n    message: 'Passwords do not match',\r\n    path: ['confirmPassword']\r\n  })\r\n  \r\n  const form = useForm({\r\n    resolver: zodResolver(formSchema),\r\n    defaultValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n  })\r\n\r\n  const handleRegisterSubmit = async (values) => {\r\n    try {\r\n      setLoading(true)\r\n      setError('')\r\n      \r\n      // Remove confirmPassword from the request payload\r\n      const { confirmPassword, ...registerData } = values\r\n      \r\n      const { data: registerResponse } = await axios.post('/api/auth/register', registerData)\r\n      \r\n      if (!registerResponse.success) {\r\n        throw new Error(registerResponse.message || 'Registration failed')\r\n      }\r\n\r\n      // Set success state and store email for display\r\n      setRegisteredEmail(values.email)\r\n      setSuccess(true)\r\n      form.reset()\r\n      showToast('success', registerResponse.message || 'Registration successful! Please check your email.')\r\n      \r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || error.message || 'Registration failed'\r\n      setError(errorMessage)\r\n      showToast('error', errorMessage)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleBackToLogin = () => {\r\n    setSuccess(false)\r\n    setRegisteredEmail('')\r\n    setError('')\r\n    form.reset()\r\n  }\r\n\r\n  // Success screen - email verification sent\r\n  if (success) {\r\n    return (\r\n      <div className=\" bg-[#FAF4E9] min-h-screen flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"max-w-md w-full space-y-8\"\r\n        >\r\n          <div className=\"text-center\">\r\n            <div className=\"flex justify-center\">\r\n              <div className=\"w-12 h-12 bg-gradient-to-r from-green-600 to-green-500 rounded-lg flex items-center justify-center\">\r\n                <svg className=\"w-6 h-6 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <h2 className=\"mt-6 text-center text-3xl font-bold text-gray-900\">\r\n              Check your email!\r\n            </h2>\r\n            <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n              We've sent a verification link to <strong>{registeredEmail}</strong>. \r\n              Please check your inbox and click the link to verify your account.\r\n            </p>\r\n            <div className=\"mt-8 space-y-3\">\r\n              <Link\r\n                href=\"/auth/login\"\r\n                className=\"inline-block w-full text-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-300\"\r\n              >\r\n                Go to Login\r\n              </Link>\r\n              <button\r\n                onClick={handleBackToLogin}\r\n                className=\"inline-block w-full text-center py-3 px-4 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-300\"\r\n              >\r\n                Register Another Account\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Registration form\r\n  return (\r\n    <div className=\"min-h-screen bg-[#FAF4E9] flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        className=\"max-w-md w-full space-y-8\"\r\n      >\r\n        <div>\r\n          <div className=\"flex justify-center\">\r\n            <Image \r\n              src={Logo} \r\n              alt=\"Vedara Naturals Logo\" \r\n              width={60} \r\n              height={60}\r\n             />\r\n          </div>\r\n          <h2 className=\"mt-6 text-center text-3xl font-bold text-gray-900\">\r\n            Create your account\r\n          </h2>\r\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n            Or{' '}\r\n            <Link\r\n              href=\"/auth/login\"\r\n              className=\"font-medium text-blue-600 hover:text-blue-500\"\r\n            >\r\n              sign in to your existing account\r\n            </Link>\r\n          </p>\r\n        </div>\r\n        \r\n        <form className=\"mt-8 space-y-6\" onSubmit={form.handleSubmit(handleRegisterSubmit)}>\r\n          {error && (\r\n            <div className=\"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-lg\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          \r\n          <div className=\"space-y-4\">\r\n            <div>\r\n              <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700\">\r\n                Full Name\r\n              </label>\r\n              <input\r\n                id=\"name\"\r\n                type=\"text\"\r\n                autoComplete=\"name\"\r\n                required\r\n                {...form.register('name')}\r\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                placeholder=\"Enter your full name\"\r\n              />\r\n              {form.formState.errors.name && (\r\n                <p className=\"text-red-500 text-xs mt-1\">{form.formState.errors.name.message}</p>\r\n              )}\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\r\n                Email address\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                required\r\n                {...form.register('email')}\r\n                className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                placeholder=\"Enter your email\"\r\n              />\r\n              {form.formState.errors.email && (\r\n                <p className=\"text-red-500 text-xs mt-1\">{form.formState.errors.email.message}</p>\r\n              )}\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                Password\r\n              </label>\r\n              <div className=\"mt-1 relative\">\r\n                <input\r\n                  id=\"password\"\r\n                  type={showPassword ? 'text' : 'password'}\r\n                  autoComplete=\"new-password\"\r\n                  required\r\n                  {...form.register('password')}\r\n                  className=\"block w-full px-3 py-2 pr-10 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                  placeholder=\"Enter your password\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                  className=\"absolute inset-y-0 right-0 flex items-center pr-3\"\r\n                  tabIndex={-1}\r\n                >\r\n                  {showPassword ? (\r\n                    <EyeSlashIcon className=\"w-5 h-5 text-gray-400\" />\r\n                  ) : (\r\n                    <EyeIcon className=\"w-5 h-5 text-gray-400\" />\r\n                  )}\r\n                </button>\r\n              </div>\r\n              {form.formState.errors.password && (\r\n                <p className=\"text-red-500 text-xs mt-1\">{form.formState.errors.password.message}</p>\r\n              )}\r\n            </div>\r\n            \r\n            <div>\r\n              <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700\">\r\n                Confirm Password\r\n              </label>\r\n              <div className=\"mt-1 relative\">\r\n                <input\r\n                  id=\"confirmPassword\"\r\n                  type={showConfirmPassword ? 'text' : 'password'}\r\n                  autoComplete=\"new-password\"\r\n                  required\r\n                  {...form.register('confirmPassword')}\r\n                  className=\"block w-full px-3 py-2 pr-10 border border-gray-300 rounded-lg shadow-sm placeholder-gray-400 focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n                  placeholder=\"Confirm your password\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n                  className=\"absolute inset-y-0 right-0 flex items-center pr-3\"\r\n                  tabIndex={-1}\r\n                >\r\n                  {showConfirmPassword ? (\r\n                    <EyeSlashIcon className=\"w-5 h-5 text-gray-400\" />\r\n                  ) : (\r\n                    <EyeIcon className=\"w-5 h-5 text-gray-400\" />\r\n                  )}\r\n                </button>\r\n              </div>\r\n              {form.formState.errors.confirmPassword && (\r\n                <p className=\"text-red-500 text-xs mt-1\">{form.formState.errors.confirmPassword.message}</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center\">\r\n            <input\r\n              id=\"terms\"\r\n              name=\"terms\"\r\n              type=\"checkbox\"\r\n              required\r\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\r\n            />\r\n            <label htmlFor=\"terms\" className=\"ml-2 block text-sm text-gray-900\">\r\n              I agree to the{' '}\r\n              <Link href=\"/terms\" className=\"text-blue-600 hover:text-blue-500\">\r\n                Terms of Service\r\n              </Link>{' '}\r\n              and{' '}\r\n              <Link href=\"/privacy\" className=\"text-blue-600 hover:text-blue-500\">\r\n                Privacy Policy\r\n              </Link>\r\n            </label>\r\n          </div>\r\n\r\n          <div>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isLoading}\r\n              className=\"bg-[#2D5016] hover:bg-[#7BA428] group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-300\"\r\n            >\r\n              {isLoading ? (\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                  Creating account...\r\n                </div>\r\n              ) : (\r\n                'Create account'\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </motion.div>\r\n    </div>\r\n  )\r\n}","usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\(root)\\auth\\reset-password\\page.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\(root)\\auth\\verify-email\\[token]\\page.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\auth\\login\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\auth\\register\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\auth\\resend-otp\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\auth\\reset-password\\send-otp\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\auth\\reset-password\\update-password\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\auth\\reset-password\\verify-otp\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\auth\\verify-email\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\auth\\verify-otp\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\cart\\[productId]\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\cart\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\dashboard\\user\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\orders\\[orderId]\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\orders\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\payment\\checkout\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\payment\\create-order\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\payment\\verify-payment\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\products\\[slug]\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\products\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\profile\\get\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\profile\\update\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\test\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\api\\user-order\\route.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\layout.jsx","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]},{"filePath":"D:\\Projects\\productecommerce\\app\\page.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[]}]